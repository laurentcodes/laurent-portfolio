---
import { TinaMarkdown } from 'tinacms/dist/rich-text';
import { MarkdownComp } from '../../components/MarkdownComp';

import { getFile } from '../../utils/get-file';

import { client } from '../../../tina/__generated__/client';

import { formatDateTime } from '../../utils/formatDate';

import '../../styles/cms.css';

import Layout from '../../layouts/Layout.astro';

const { post } = Astro.params;

const url = Astro.url.href;

const singlePostRes = await client.queries.post({ relativePath: `${post}.md` });
const singlePost = singlePostRes.data.post;

const postMarkdown = getFile(post);

const deleteContent = (markdown) => {
	const startDelimiter = '---';
	const endDelimiter = '---';

	const startIndex = markdown.indexOf(startDelimiter);
	const endIndex = markdown.indexOf(
		endDelimiter,
		startIndex + startDelimiter.length
	);

	if (startIndex !== -1 && endIndex !== -1) {
		const startPart = markdown.substring(0, startIndex);
		const endPart = markdown.substring(endIndex + endDelimiter.length);
		const updatedMarkdown = startPart + endPart;
		return updatedMarkdown;
	} else {
		return 'Unable to find content between delimiters';
	}
};

const newMark = deleteContent(postMarkdown);

const formattedDate = formatDateTime(singlePost.posted);

const markdown = '### Hi, *Pluto*!';
---

<Layout
	title={`Laurent. | Blog - ${singlePost.title}`}
	description={singlePost.summary.children[0].children[0].text}
	url={url}
>
	<main class='md:px-36 md:py-12'>
		<div class='mb-2'>
			<a href='/blog' class='text-blue-700 dark:text-blue-400'>{`<- back`}</a>
		</div>

		<div>
			<h3 class='text-red-500 text-3xl font-bold'>{singlePost.title}</h3>
			<p class='text-gray-500'>{formattedDate}</p>
		</div>

		<div class='cms-content my-12'>
			<!-- <TinaMarkdown content={singlePost.body} /> -->
			<MarkdownComp content={newMark} />
		</div>

		{
			singlePost.tags && (
				<div class='flex'>
					<p class='font-bold mr-2'>TAGS:</p>

					{singlePost.tags.map((tag, index) => (
						<p class='text-blue-400'>
							{index ? ',' : ''}
							{tag}
						</p>
					))}
				</div>
			)
		}
	</main>
</Layout>
